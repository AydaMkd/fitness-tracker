{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from './authService'; // Get user from localStorage\n\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n}; // Register user\n\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n}); // Login user\n\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  try {\n    return await authService.login(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout();\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message","register","thunkAPI","error","response","data","toString","rejectWithValue","login","logout","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions"],"sources":["/Users/AydaMk/Desktop/fitnessdeloyment/newrepo/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport authService from './authService'\n\n\n// Get user from localStorage\nconst user = JSON.parse(localStorage.getItem('user'))\n\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n}\n\n// Register user\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (user, thunkAPI) => {\n    try {\n      return await authService.register(user)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n// Login user\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  try {\n    return await authService.login(user)\n  } catch (error) {\n    const message =\n      (error.response && error.response.data && error.response.data.message) ||\n      error.message ||\n      error.toString()\n    return thunkAPI.rejectWithValue(message)\n  }\n})\n\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout()\n})\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n      reset: (state) => {\n        state.isLoading = false\n        state.isSuccess = false\n        state.isError = false\n        state.message = ''\n      },\n    },\n\n    extraReducers:(builder)=>{\n      builder\n      .addCase(register.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(register.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.user = action.payload\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n        state.user = null\n      })\n      .addCase(login.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.user = action.payload\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n        state.user = null\n      })\n\n      .addCase(logout.fulfilled, (state) => {\n        state.user = null\n      })\n\n    }\n})\nexport const {reset} = authSlice.actions;\n\n\nexport default authSlice"],"mappings":"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"},"metadata":{},"sourceType":"module"}